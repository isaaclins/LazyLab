name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    name: Go ${{ matrix.go-version }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        go-version: ["1.20.x", "1.21.x"]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go-version }}
          cache: true

      - name: Cache Go modules
        uses: actions/cache@v4
        with:
          path: |
            ~/go/pkg/mod
            ~/.cache/go-build
          key: ${{ runner.os }}-go-${{ matrix.go-version }}-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-${{ matrix.go-version }}-
            ${{ runner.os }}-go-

      - name: Install dependencies
        run: go mod download

      - name: Fmt check
        run: |
          if [ -n "$(gofmt -l .)" ]; then
            echo "Go files not formatted:" && gofmt -l . && exit 1; fi

      - name: Vet
        run: go vet ./...

      - name: Build
        run: go build -v ./...

      - name: Test (race)
        run: go test -race -v -p 2 ./...

      - name: Install gosec (pinned)
        run: go install github.com/securego/gosec/v2/cmd/gosec@v2.22.7

      - name: Run gosec
        run: $HOME/go/bin/gosec ./...
